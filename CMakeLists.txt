cmake_minimum_required(VERSION 3.20)
include_directories(include lib)

set(PROJECT_NAME algorithms)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
set(LIBRARIES_DIR lib)
set(LIBRARIES clrs)

project(${PROJECT_NAME})

function(test PART CHAPTER SECTION CONCEPT)
    set(number_pattern "^[0-9][0-9]$")
    set(concept_pattern "^[a-z_]+$")
    if(PART MATCHES ${number_pattern} AND CHAPTER MATCHES ${number_pattern} AND SECTION MATCHES ${number_pattern} AND CONCEPT MATCHES ${concept_pattern})
        file(GLOB PARTS "src/*")
        foreach(PART_PATH ${PARTS})
            if(PART_PATH MATCHES "src\/${PART}_[a-z_]+$")
                file(GLOB CHAPTERS "${PART_PATH}/*")
                foreach(CHAPTER_PATH ${CHAPTERS})
                    if(CHAPTER_PATH MATCHES "${PART_PATH}\/${CHAPTER}_[a-z_]+$")
                        file(GLOB SECTIONS "${CHAPTER_PATH}/*")
                        foreach(SECTION_PATH ${SECTIONS})
                            if(SECTION_PATH MATCHES "${CHAPTER_PATH}\/${SECTION}_[a-z_]+$")
                                file(GLOB CONCEPTS "${SECTION_PATH}/*")
                                foreach(CONCEPT_PATH ${CONCEPTS})
                                    if(CONCEPT_PATH MATCHES "${SECTION_PATH}\/${CONCEPT}$")
                                        set(STANDARD_PATTERN "src\/${PART}_([a-z_]+)\/${CHAPTER}_([a-z_]+)\/${SECTION}_([a-z_]+)\/${CONCEPT}$")
                                        if(EXISTS "${CONCEPT_PATH}/main.cpp" AND ${CONCEPT_PATH} MATCHES ${STANDARD_PATTERN})
                                            set(executable_name "${PART}_${CHAPTER}_${SECTION}_${CONCEPT}")
                                            file(GLOB EXECUTABLE_SET CONFIGURE_DEPENDS "${CONCEPT_PATH}/*.h" "${CONCEPT_PATH}/*.cpp")
                                            # file(GLOB SOURCE_SET CONFIGURE_DEPENDS "src/${CMAKE_MATCH_1}/*.cpp")
                                            # file(GLOB HEADER_SET CONFIGURE_DEPENDS "include/${CMAKE_MATCH_1}/*.h")
                                            # list(APPEND EXECUTABLE_SET ${SOURCE_SET} ${HEADER_SET})
                                            add_executable(${executable_name} ${EXECUTABLE_SET})
                                            target_link_libraries(${executable_name} ${LIBRARIES})
                                        endif()                         
                                        break()
                                    endif()
                                endforeach()
                                break()
                            endif()
                        endforeach()
                        break()
                    endif()
                endforeach()
                break()
            endif() 
        endforeach()
    endif()
endfunction()

foreach(LIBRARY ${LIBRARIES})
    add_subdirectory("${LIBRARIES_DIR}/${LIBRARY}")
endforeach(LIBRARY)

test(01 02 01 insertion_sort)